name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.18

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      run: bun install

    - name: Run type checking
      run: bun run typecheck

    - name: Run linter
      run: bun run lint

    - name: Run tests with coverage
      run: bun test --coverage --coverage-reporter=lcov --coverage-reporter=text
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: false
        verbose: true

    - name: Build project
      run: bun run build

    - name: Verify build output
      run: |
        if [ ! -f "dist/index.js" ]; then
          echo "Build failed: dist/index.js not found"
          exit 1
        fi
        echo "Build successful: dist/index.js found"

  test-anvil:
    name: Integration Tests (Anvil)
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      USE_REAL_ANVIL: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.2.18

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      run: bun install

    - name: Start Anvil via Docker
      run: |
        docker run -d --name anvil \
          -p 8545:8545 \
          -e ANVIL_IP_ADDR=0.0.0.0 \
          ghcr.io/foundry-rs/foundry:latest \
          anvil
        sleep 2

    - name: Compile Counter contract
      run: bun run scripts/compile-counter.ts

    - name: Run integration tests with Anvil
      run: |
        bun test test/integration/handlers/token.test.ts
        bun test test/integration/counter-e2e.test.ts

    - name: Stop Anvil
      if: always()
      run: docker stop anvil && docker rm anvil