{
  "name": "wallet-agent",
  "version": "0.3.2",
  "description": "MCP server for Web3 wallet interactions on EVM-compatible chains using Wagmi",
  "keywords": [
    "mcp",
    "model-context-protocol",
    "wallet",
    "web3",
    "wagmi",
    "evm",
    "ethereum",
    "base",
    "arbitrum",
    "blockchain"
  ],
  "author": "Shane Vitarana",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/wallet-agent/wallet-agent.git"
  },
  "main": "dist/index.js",
  "type": "module",
  "types": "dist/index.d.ts",
  "bin": {
    "wallet-agent": "./dist/cli.js"
  },
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "default": "./dist/index.js"
    },
    "./cli": {
      "types": "./dist/cli.d.ts",
      "import": "./dist/cli.js",
      "default": "./dist/cli.js"
    },
    "./server": {
      "types": "./dist/server.d.ts",
      "import": "./dist/server.js",
      "default": "./dist/server.js"
    },
    "./src/adapters/wagmi-adapter": {
      "types": "./dist/adapters/wagmi-adapter.d.ts",
      "import": "./dist/adapters/wagmi-adapter.js",
      "default": "./dist/adapters/wagmi-adapter.js"
    },
    "./src/contract-operations": {
      "types": "./dist/contract-operations.d.ts",
      "import": "./dist/contract-operations.js",
      "default": "./dist/contract-operations.js"
    },
    "./src/effects/contract-effects": {
      "types": "./dist/effects/contract-effects.d.ts",
      "import": "./dist/effects/contract-effects.js",
      "default": "./dist/effects/contract-effects.js"
    },
    "./src/effects/contract-store": {
      "types": "./dist/effects/contract-store.d.ts",
      "import": "./dist/effects/contract-store.js",
      "default": "./dist/effects/contract-store.js"
    },
    "./src/effects/file-reader": {
      "types": "./dist/effects/file-reader.d.ts",
      "import": "./dist/effects/file-reader.js",
      "default": "./dist/effects/file-reader.js"
    },
    "./src/effects/token-effects": {
      "types": "./dist/effects/token-effects.d.ts",
      "import": "./dist/effects/token-effects.js",
      "default": "./dist/effects/token-effects.js"
    },
    "./src/effects/transaction-effects": {
      "types": "./dist/effects/transaction-effects.d.ts",
      "import": "./dist/effects/transaction-effects.js",
      "default": "./dist/effects/transaction-effects.js"
    },
    "./src/effects/wallet-effects": {
      "types": "./dist/effects/wallet-effects.d.ts",
      "import": "./dist/effects/wallet-effects.js",
      "default": "./dist/effects/wallet-effects.js"
    }
  },
  "files": [
    "dist/**/*",
    "README.md",
    "CHANGELOG.md",
    "LICENSE"
  ],
  "scripts": {
    "build": "rm -rf dist && mkdir -p dist && echo 'export * from \"../src/index.ts\";' > dist/index.js && tsc -p tsconfig.build.json || true",
    "build:types": "tsc -p tsconfig.build.json",
    "dev": "bun run src/index.ts",
    "test": "NODE_ENV=test bun test",
    "test:watch": "NODE_ENV=test bun test --watch",
    "test:coverage": "NODE_ENV=test bun test --coverage --coverage-reporter=lcov --coverage-reporter=text",
    "test:anvil": "USE_REAL_ANVIL=true NODE_ENV=test bun test",
    "test:anvil:setup": "anvil --host 0.0.0.0 --port 8545",
    "test:anvil:tokens": "USE_REAL_ANVIL=true NODE_ENV=test bun test test/integration/handlers/token.test.ts",
    "test:e2e": "NODE_ENV=test bun test test/e2e/",
    "test:e2e:claude": "NODE_ENV=test bun test test/e2e/claude-sdk/",
    "test:e2e:claude:docs": "NODE_ENV=test bun test test/e2e/claude-sdk/documentation-examples.e2e.ts",
    "test:e2e:claude:wallet": "NODE_ENV=test bun test test/e2e/claude-sdk/wallet-scenarios.e2e.ts",
    "test:e2e:claude:tokens": "NODE_ENV=test bun test test/e2e/claude-sdk/token-nft-scenarios.e2e.ts",
    "test:e2e:claude:chains": "NODE_ENV=test bun test test/e2e/claude-sdk/chain-scenarios.e2e.ts",
    "test:e2e:mcp": "NODE_ENV=test bun test test/e2e/mcp-direct.test.ts",
    "test:integration:ens": "NODE_ENV=test bun test test/integration/ens-integration.test.ts",
    "test:integration:contracts": "NODE_ENV=test bun test test/integration/contract-development-workflow.test.ts",
    "test:ci": "./scripts/test-ci.sh",
    "test:ci:separate": "./scripts/test-ci-separate.sh",
    "typecheck": "tsc --noEmit",
    "lint": "biome check .",
    "lint:fix": "biome check --write --unsafe .",
    "format": "biome format --write .",
    "check": "biome check --apply .",
    "prepare": "simple-git-hooks",
    "prepublishOnly": "bun run build"
  },
  "simple-git-hooks": {
    "pre-commit": "bun run typecheck && bun run format && bun run lint"
  },
  "simple-git-hooks-comment": "These hooks are for standalone wallet-agent repo. In monorepo context, root hooks take precedence.",
  "devDependencies": {
    "@anthropic-ai/claude-code": "^1.0.96",
    "@biomejs/biome": "2.1.4",
    "@types/bun": "latest",
    "cross-env": "^10.0.0",
    "simple-git-hooks": "^2.13.1",
    "solc": "^0.8.12"
  },
  "peerDependencies": {
    "typescript": "^5"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.1",
    "@nktkas/hyperliquid": "^0.24.0",
    "@wagmi/connectors": "^5.9.1",
    "@wagmi/core": "^2.18.1",
    "pino": "^9.9.0",
    "pino-pretty": "^13.1.1",
    "viem": "2.x",
    "zod": "^4.0.14"
  }
}
